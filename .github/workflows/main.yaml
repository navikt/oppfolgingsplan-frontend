name: main

on: push

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

jobs:
  build:
    name: Checkout code and create docker tag
    runs-on: ubuntu-latest
    permissions:
      packages: 'write'
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.14.2"
          registry-url: 'https://npm.pkg.github.com'
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: next.js cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install deps
        run: |
          npm install
      - name: Build
        run: npm run build
      - name: Lint and TSC
        run: npm run lint && tsc
      - name: Test
        run: npm run test
      - name: Upload static files to NAV CDN
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-environment: cdn.nav.no
          cdn-team-name: team-esyfo
          source: ./.next/static
          destination: '/oppfolgingsplan-frontend/_next'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        run: |
          docker build --tag ${IMAGE} .
          docker push ${IMAGE}
          echo ${IMAGE}

  cypress:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [ 0, 1, 2, 3 ]
    steps:
      - name: cache workspace
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: ${{ github.sha }}
      - name: cache cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('package.json') }}
      - name: Kj√∏r cypress
        uses: cypress-io/github-action@v5.1.0
        with:
          start: npm run dev
          wait-on: http://localhost:3000/${{inputs.base-path}}/api/internal/isAlive
          config-file: cypress.config.ts
          spec: cypress/e2e/run-${{ matrix.containers }}/**
          install: false
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

  deploy-dev:
    if: github.ref == 'refs/heads/main'
    name: Deploy to dev-gcp
    needs: [build, cypress]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/naiserator-dev.yaml

  deploy-labs:
    if: github.ref == 'refs/heads/main'
    name: Deploy to labs
    needs: [build, cypress]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: nais/naiserator-labs.yaml
          DEPLOY_SERVER: deploy.nais.io:443

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    name: Deploy to prod-gcp
    needs: [build, cypress]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/naiserator-prod.yaml
