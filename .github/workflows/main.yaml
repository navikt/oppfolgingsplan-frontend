name: main

on: push

env:
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

jobs:
  build:
    name: Checkout code and create docker tag
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
          cache: npm
          registry-url: https://npm.pkg.github.com
      - name: Cache NextJS
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('package.json') }}
      - name: Install npm dependencies
        run: npm ci
      - name: Lint and TSC
        run: npm run lint && tsc
      - name: Run Jest tests
        run: npm run test
      - name: Run Cypress tests
        run: npx cypress run --component
      - name: Build project
        run: npm run build
      - name: Upload static files to NAV CDN
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-environment: cdn.nav.no
          cdn-team-name: team-esyfo
          source: ./.next/static
          destination: '/oppfolgingsplan-frontend/_next'
      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: team-esyfo
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    if: github.ref == 'refs/heads/main'
    name: Deploy to dev-gcp
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/naiserator-dev.yaml
          VAR: image=${{ needs.build.outputs.image }}

  deploy-demo:
    if: github.ref == 'refs/heads/main'
    name: Deploy to demo dev-gcp
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/naiserator-demo.yaml
          VAR: image=${{ needs.build.outputs.image }}

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    name: Deploy to prod-gcp
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/naiserator-prod.yaml
          VAR: image=${{ needs.build.outputs.image }}
